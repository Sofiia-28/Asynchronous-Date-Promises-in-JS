{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAyBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAI,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEhDG,EAAE,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAEhDA,E,IAhCPL,EAAKa,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAW,CACbC,WAAYjB,EAAKkB,SAASb,MAAMc,MAChCC,KAAMpB,EAAKkB,SAASE,KAAKD,MACzBE,OAAQrB,EAAKkB,SAASG,OAAOF,OAE/BG,QAAQC,IAAIP,GACZ,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAASK,OAAQG,IAAK,CACxC,IAAMC,EAAeC,OAAOV,EAASC,YAAcS,OAAOV,EAASI,MAAQI,EAC3EF,QAAQC,IAAIE,GACZtB,EAAcqB,EAAI,EAAGC,GAClBE,MAAK,SAACR,GACLS,EAAA9B,GAAS+B,OAAOC,QAAQX,E,IAEzBY,OAAM,SAACC,GACNJ,EAAA9B,GAAS+B,OAAOI,QAAQD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// Refs\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault()\n  let userData = {\n    firstDelay: form.elements.delay.value,\n    step: form.elements.step.value,\n    amount: form.elements.amount.value,\n  };\n  console.log(userData);\n  for (let i = 0; i < userData.amount; i++) {\n    const currentDelay = Number(userData.firstDelay) + Number(userData.step) * i;\n    console.log(currentDelay);\n    createPromise(i + 1, currentDelay)\n      .then((value) => {\n        Notiflix.Notify.success(value);\n      })\n      .catch((error) => {\n        Notiflix.Notify.failure(error);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","concat","addEventListener","event","preventDefault","userData","firstDelay","elements","value","step","amount","console","log","i","currentDelay","Number","then","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.521ac854.js.map"}