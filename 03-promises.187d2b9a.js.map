{"mappings":"gfAAAA,EAAA,SAEA,IAAMC,EAAOC,SAASC,cAAc,SA0BpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,SAAW,CACTC,WAAYd,EAAKe,SAASV,MAAMW,MAChCC,KAAMjB,EAAKe,SAASE,KAAKD,MACzBE,OAAQlB,EAAKe,SAASG,OAAOF,OAE/BG,QAAQC,IAAIP,UACRH,EACFH,EAAI,CAACH,WAAUC,UAEfG,EAAI,CAACJ,WAAUC,S,GAEhBQ,SAASC,W,IAvChBd,EAAKqB,iBAAiB,UAEtB,SAAkBC,GAChB,IAAIT,EAAW,CACbC,WAAYd,EAAKe,SAASV,MAAMW,MAChCC,KAAMjB,EAAKe,SAASE,KAAKD,MACzBE,OAAQlB,EAAKe,SAASG,OAAOF,OAE/BG,QAAQC,IAAIP,GACZ,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAASK,OAAQK,IAAK,CACxC,IAAMC,EAAeC,OAAOZ,EAASC,YAAcW,OAAOZ,EAASI,MAAQM,EAC3EJ,QAAQC,IAAII,GACZrB,EAAcoB,EAAI,EAAGC,GAClBE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBc,QAAQC,IAAI,uBAAwCQ,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,OACxDwB,MAAI,uBAAwCD,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAErDyB,OAAM,SAAAH,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBc,QAAQC,IAAI,sBAAuCQ,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,OACvDwB,MAAI,sBAAqCD,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// Refs\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  let userData = {\n    firstDelay: form.elements.delay.value,\n    step: form.elements.step.value,\n    amount: form.elements.amount.value,\n  };\n  console.log(userData);\n  for (let i = 0; i < userData.amount; i++) {\n    const currentDelay = Number(userData.firstDelay) + Number(userData.step) * i;\n    console.log(currentDelay);\n    createPromise(i + 1, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        alert(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        alert(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      userData = {\n        firstDelay: form.elements.delay.value,\n        step: form.elements.step.value,\n        amount: form.elements.amount.value,\n      };\n      console.log(userData);\n      if (shouldResolve) {\n        res({position, delay});\n      } else {\n        rej({position, delay});\n      }\n    }, userData.firstDelay);\n  });\n}"],"names":["parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","setTimeout","shouldResolve","Math","random","userData","firstDelay","elements","value","step","amount","console","log","addEventListener","event","i","currentDelay","Number","then","param","concat","alert","catch"],"version":3,"file":"03-promises.187d2b9a.js.map"}